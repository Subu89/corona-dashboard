{"version":3,"sources":["images/covid-19.jpg","components/Card.jsx","components/Cards.jsx","service/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","header","background","padding","CardComponent","cardTitle","value","desc","lastUpdate","classes","Grid","component","Card","style","margin","borderBottom","Box","className","Typography","variant","color","CardContent","start","end","duration","separator","Date","toDateString","flexDirection","alignItems","display","container","marginBottom","Cards","data","confirmed","recovered","deaths","gutterBottom","spacing","justifyContent","CircularProgress","url","fetchData","country","a","changedUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchApi","NativeSelect","onChange","e","target","i","useStyle","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","console","log","this","props","lastUpdated","src","logo","alt","Component","withStyles","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b707fb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/covid-19.a1838bef.jpg\";","import { Grid, CardContent, Box, Typography, Card } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport Countup from 'react-countup';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        background: '#F5F5F5',\r\n        padding: 10\r\n    }\r\n})\r\n\r\nconst CardComponent = ({cardTitle, value, desc, lastUpdate}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid component={Card} style={{margin:20, borderBottom: '10px solid yellow'}}>\r\n            <Box className={classes.header}>\r\n                <Typography variant=\"h5\" color=\"textSecondary\">{cardTitle}</Typography>\r\n            </Box>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">\r\n                    <Countup start={0} end={value} duration={3} separator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{desc}</Typography>\r\n                <Typography>{new Date(lastUpdate).toDateString()}</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CardComponent;","import { Typography, Box, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Card from \"./Card\";\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        margin: '50px 0',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        display: 'flex'\r\n    },\r\n    container: {\r\n        color: '#8ACA2B',\r\n        marginBottom: 40\r\n    }\r\n})\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate} }) => {\r\n    const classes = useStyles();\r\n\r\n    if(!confirmed) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    return(\r\n        <Box className = {classes.component}>\r\n            <Typography className = {classes.container} variant=\"h4\" gutterBottom>Coronovirus cases Global</Typography>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                <Card cardTitle=\"Infected\" value={confirmed.value} desc=\"Number of infected cases of COVID-19\" lastUpdate={lastUpdate} />\r\n                <Card cardTitle=\"Recovered\" value={recovered.value} desc=\"Number of recovered cases from COVID-19\" lastUpdate={lastUpdate} />\r\n                <Card cardTitle=\"Deaths\" value={deaths.value} desc=\"Number of deaths due to COVID-19\" lastUpdate={lastUpdate} />\r\n            </Grid>    \r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changedUrl = url;\r\n    if(country) {\r\n        changedUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changedUrl);\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch(error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map(country => country.name);\r\n    } catch(error) {\r\n        return error;\r\n    }\r\n}","import { useEffect, useState } from \"react\"\r\nimport { fetchCountries } from '../service/api.js';\r\nimport { Typography, NativeSelect } from \"@mui/material\";\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n    const [ countries, setCountries ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{marginBottom: 20}} variant=\"h5\" color=\"textSecondary\">Reported Cases or Deaths By Country</Typography>\r\n            <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                <option value = \"\">India</option>\r\n                { countries.map((country, i) => {\r\n                    return (\r\n                        <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n            </NativeSelect>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries;","import { Box } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst useStyle = makeStyles({\r\n    container : {\r\n        width: '75%',\r\n        marginTop: 20\r\n    }\r\n})\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }}) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Box className = {classes.container}>\r\n            {confirmed ? (\r\n            <Bar\r\n                data = {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'Peoples',\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)'\r\n                        ],\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: 'Current State in Country' } \r\n                }}\r\n            ></Bar> ) : '' \r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Chart;","import { Component } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { withStyles } from '@mui/styles';\nimport logo from './images/covid-19.jpg';\nimport Cards from './components/Cards.jsx';\nimport Countries from './components/Countries.jsx';\nimport Chart from './components/Chart.jsx';\nimport { fetchData } from './service/api';\n\nconst style = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  header: {\n    background: '#f5f5f5',\n    width: 400,\n    textAlign: 'center',\n    fontSize: 20,\n    padding: 10,\n    color: '#777',\n  },\n  lastUpdated: {\n    color: '#777',\n    fontSize: 12\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData});\n    console.log(fetchedData);\n  }\n\n  handleCountryChange = async(country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData, country: country});\n    console.log(fetchedData);\n  }  \n\n  render(){\n    const { data } = this.state;\n    return (\n      <Box className={this.props.classes.container}>\n        <Box className={this.props.classes.header}>COVID-19 CORONOVIRUS PANDEMIC</Box>\n        <Typography className={this.props.classes.lastUpdated}>Last Updated: {data.lastUpdate && new Date(data.lastUpdate).toDateString()}</Typography>\n        <img style={{width:350}} src={logo} alt=\"COVID\" />\n        <Cards data={data} />\n        <Countries handleCountryChange = {this.handleCountryChange} />\n        <Chart data={data} />\n      </Box>\n    )\n  }\n}\n\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}